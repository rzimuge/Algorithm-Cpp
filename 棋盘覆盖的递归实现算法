#include<iostream>
using namespace std;

#define size 16

char pai[4] = { 'A','B','C','D' };
char Board[size+1][size+1];

void ChessBoard(int tr, int tc, int dr, int dc, int sizes)
{
	if (sizes == 1) { return ; }
	int s = sizes / 2;

	char t ;
	if (dr < tr + s && dc < tc + s) { t = pai[3]; }
	if (dr < tr + s && dc >= tc + s) { t = pai[1]; }
	if (dr >= tr + s && dc < tc + s) { t = pai[0]; }
	if (dr >= tr + s && dc >= tc + s) { t = pai[2]; }

	if (dr < tr + s && dc < tc + s)//左上角
	{
		ChessBoard(tr, tc, dr, dc, s);
	}
	else
	{
		Board[tr + s-1][tc + s-1] = t;
		ChessBoard(tr, tc, tr + s - 1, tc + s - 1, s);
	}

	if (dr >= tr + s && dc < tc + s)//左下角
	{
		ChessBoard(tr+s, tc, dr, dc, s);
	}
	else
	{
		Board[tr + s ][tc + s-1 ] = t;
		ChessBoard(tr + s, tc, tr + s, tc + s - 1, s);
	}

	if (dr < tr + s && dc >= tc + s)//右上角
	{
		ChessBoard(tr, tc+s, dr, dc, s);
	}
	else
	{
		Board[tr + s - 1][tc + s] = t;
		ChessBoard(tr, tc + s, tr + s - 1, tc + s , s);
	}

	if (dr >= tr + s && dc >= tc + s)//右下角
	{
		ChessBoard(tr+s, tc+s, dr, dc, s);
	}
	else
	{
		Board[tr + s ][tc + s] = t;
		ChessBoard(tr + s, tc + s, tr + s , tc + s, s);
	}


}

int main()
{
	int tr, tc, dr, dc;
	cout << "请依次输入棋盘特殊方格行号,列号." << endl;
	tr = 0;
	tc = 0;
	cin  >> dr >> dc;
	dr--;
	dc--;
	Board[dr][dc] = '*';

	ChessBoard(tr, tc, dr, dc, size);

	for (int i = 0; i <= 16; i++)
	{
		for (int o = 0; o <= size; o++)
		{
			cout << Board[i][o] << " ";
		}
		cout << endl;
	}
	return 0;

}
