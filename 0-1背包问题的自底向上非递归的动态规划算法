
#include<iostream>
#define max(a,b) a>b?a:b
#define min(a,b) a<b?a:b
using namespace std;

void work01(int *wi, double *vi,int n,int c)
{
	int t = c;
	int *X = new int[n];
	for (int i = 0; i < n; i++)
	{
		X[i] = 0;
	}
	double **m = new double *[n];
	for (int i = 0; i < n; i++)
	{
		m[i] = new double[c + 1];
	}
	for (int i = 0; i < n; i++)
	{
		for (int o = 0; o <=c; o++)
		{
			m[i][o] = -1;
		}
		
	}

	int jMAX = min( wi[n-1]-1, c );
	for (int j = 0; j <= jMAX; j++)
	{
		m[n - 1][j] = 0;
	}
	for (int j = wi[n-1]; j <= c; j++)
	{
		m[n - 1][j] = vi[n-1];
	}
	for (int i = n - 2; i >0; i--)
	{
		int jMAX = min(wi[i ]-1, c);
		for (int j = 0; j <= jMAX; j++)
		{
			m[i][j] = m[i+1][j];
		}
		for (int j = wi[i]; j <= c; j++)
		{
			m[i][j] = max(m[i + 1][j], m[i + 1][j - wi[i]] + vi[i]);
		}
	}
	m[0][c] = m[1][c];
	if (c >= wi[0])
	{	
		m[0][c] = max(m[0][c], m[1][c - wi[0]] + vi[0]);
	}


	cout << m[0][c] << endl;
	for (int i = 0; i < n-1; i++)
	{
		if (m[i ][c] ==m[i+1][c])
		{
			X[i] = 0;
		}
		else
		{
			X[i] = 1;
			c = c - wi[i];
		}
	}
	X[n - 1] = (m[n - 1][c]) ? 1 : 0;
	for (int i = 0; i < n; i++)
	{
		cout << X[i] << " ";
	}
	cout << endl;

	for (int i = 0; i < n; i++)
	{
		for (int o = 0; o <=t ; o++)
		{
			cout << "m[" << i << "][" << o << "]= " << m[i][o] << " "<<endl;
		}
		cout << endl;
	}
}



int main()
{
	int n = 0;
	int  c = 0;
	cin >> n>>c;
	int *wi = new int[n];
	double *vi = new double[n];
	for (int i = 0; i < n; i++)
	{
		cin >> wi[i] >> vi[i];

	} 
	
	work01(wi, vi, n, c);
	return 0; 
}
/*
5 20
4 5
9 9
2 5
7 4
2 8

*/
