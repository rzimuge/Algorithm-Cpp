#include<iostream>
#include<fstream>
using namespace std;
#define min(a,b) a<b?a:b
#define max(a,b) a>b?a:b

class yangben
{
public:
	yangben()	:x(0), y(0), value(0)	{}
	int x, y;
	int value;
};
void Bwl(yangben *Y, int *Rec, int *lu, int n, int i)
{

	int mark = 0;
	for (int o = 1; o <= n; o++)
	{
		if (o == i) continue;
		if (Y[o].x <= Y[i].x&&Y[o].y <= Y[i].y)
		{
			mark++;
			Bwl(Y, Rec,lu, n, o);
			if (Rec[i] < Rec[o] + Y[i].value) 
			{ 
				lu[i] = o; 
				Rec[i] = Rec[o] + Y[i].value;
			}
		}
	}
	if (mark == 0)
	{
		lu[i] = 0;
	}
}


int main()
{
	ifstream in("input.txt");
	ofstream out("output.txt");
	int n = 0;
	in >> n;

	yangben *Y=new yangben[n+2];
	for (int i = 1; i <= n; i++)
	{
		in >> Y[i].x >> Y[i].y >> Y[i].value;
	}
	Y[n + 1].x = n;
	Y[n + 1].y = n;
	Y[n + 1].value = 0;

	int *Rec = new int[n+2];
	int *lu = new int[n+2];
	for (int i = 0; i <= n + 1; i++)
	{
		Rec[i] = Y[i].value;
		lu[i] = 0;
	}

	Bwl(Y, Rec, lu, n, n + 1);//1
	int total = Rec[n + 1];

	int o = n + 1;//Rec,lu初始化,Y去掉收集过的样品
	while (o != 0)
	{
		Y[o].value = 0;
		o = lu[o];
	}
	for (int i = 0; i <= n + 1; i++)
	{
		Rec[i] = Y[i].value;
		lu[i] = 0;
	}

	Bwl(Y, Rec, lu, n, n + 1);//2
	total += Rec[n + 1];
	out << total;
	cout << total;
	free(Y);
	free(Rec);
	free(lu);
	return 0;
}





